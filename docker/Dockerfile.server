# FROM python:3.12-alpine3.19@sha256:849ed6079c9f797ca9c1b7d6aea1c00aea3ac35110cbd0d6003f15950017ea8d AS build
FROM docker.io/pytorch/pytorch:2.5.1-cuda12.1-cudnn9-runtime AS build

# Prevents Python from writing pyc files.
ENV PYTHONDONTWRITEBYTECODE=1

# Keeps Python from buffering stdout and stderr to avoid situations where
# the application crashes without emitting any logs due to buffering.
ENV PYTHONUNBUFFERED=1

RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y curl gcc git \
    && rm -rf /var/lib/apt/lists/*
# RUN apk update && \
#     apk add --no-cache curl gcc git

# Create a non-privileged user that the app will run under.
# See https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#user
ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/home/nonroot" \
    --shell "/sbin/nologin" \
    --uid "${UID}" \
    nonroot

USER nonroot

RUN mkdir -p /home/nonroot/.cache
RUN chown -R nonroot /home/nonroot/.cache

WORKDIR /home/nonroot

USER nonroot
COPY . .

# Install uv
# https://github.com/astral-sh/uv
USER root
RUN pip install uv \
    && CONDA_PREFIX=/opt/conda uv pip install --no-cache -r requirements.txt

USER nonroot

# run your app inside the pixi environment
ENTRYPOINT [ "python" ]
CMD [ "-m", "tts_server.server"]
